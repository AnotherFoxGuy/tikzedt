<Window x:Class="TikzEdt.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:custom="clr-namespace:TikzEdt"
        xmlns:common="clr-namespace:Common;assembly=RecentFileListLib"
        Title="MainWindow" Height="624" Width="986" xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit" xmlns:my="clr-namespace:TikzEdt" Loaded="Window_Loaded">

    <Window.Resources>
        <!-- El Cheapo hack to make images within disabled toolbar buttons appear 'grayed out'.  This doesn't
    gray them at all, but lowers their opacity so the (usually gray) background of the button shows through.
    If WPF had a built-in facility for grayscaling images in disabled buttons, this kind of icky kludgery wouldn't
    be necessary -->
        <Style TargetType="{x:Type Image}" x:Key="toolbarImageStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}, AncestorLevel=1}, Path=IsEnabled}" Value="False">
                    <Setter Property="Opacity" Value="0.50"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>


    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Open"
                    Executed="OpenCommandHandler"
                    CanExecute="AlwaysTrue"
                    />
        <CommandBinding Command="ApplicationCommands.Save"
                    Executed="SaveCommandHandler"
                    CanExecute="AlwaysTrue"
                    />
        <CommandBinding Command="ApplicationCommands.Save"
                    Executed="SaveAsCommandHandler"
                    CanExecute="AlwaysTrue"
                    />
        <CommandBinding Command="ApplicationCommands.New"
                    Executed="NewCommandHandler"
                    CanExecute="AlwaysTrue"
                    />
        <CommandBinding Command="{x:Static custom:MainWindow.CommentCommand}" 
                    Executed="CommentCommandHandler" 
                    CanExecute="AlwaysTrue" />
        <CommandBinding Command="{x:Static custom:MainWindow.UnCommentCommand}" 
                    Executed="UnCommentCommandHandler" 
                    CanExecute="AlwaysTrue" />
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Command="{x:Static custom:MainWindow.CommentCommand}" Key="D" Modifiers="Ctrl"/>
        <KeyBinding Command="{x:Static custom:MainWindow.UnCommentCommand}" Key="D" Modifiers="Ctrl+Shift"/>
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Menu Height="23" HorizontalAlignment="Stretch" Name="menu1" VerticalAlignment="Top" Grid.Row="0">
            <MenuItem Header="_File" >
                <MenuItem Header="Open" Command="ApplicationCommands.Open" />
                <MenuItem Header="New" />
                <MenuItem Header="Save" Command="ApplicationCommands.Save" />
                <MenuItem Header="Save As..."  Command="ApplicationCommands.SaveAs" />
                <common:RecentFileList x:Name="RecentFileList" />
                <MenuItem Header="Quit"  />
            </MenuItem>
            <MenuItem Header="_Edit" >
                <MenuItem Header="Copy" Command="ApplicationCommands.Copy"/>
                <MenuItem Header="Paste" Command="ApplicationCommands.Paste"/>
                <MenuItem Header="Cut"  Command="ApplicationCommands.Cut"/>
                <Separator/>
                <MenuItem Header="Comment" Command="{x:Static custom:MainWindow.CommentCommand}"/>
                <MenuItem Header="Uncomment" Command="{x:Static custom:MainWindow.UnCommentCommand}"/>
            </MenuItem>
            <MenuItem Header="_View" />
            <MenuItem Header="_Compilation">
                <MenuItem Header="Compile" Click="CompileClick"/>
                <MenuItem Header="Abort" Click="AbortCompilationClick" IsEnabled="{Binding ElementName=tikzDisplay1, Path=Compiling}"/>
            </MenuItem>
            <MenuItem Header="_Settings">
                <MenuItem Header="Snippet Manager..." Click="SnippetMenuClick"/>                
            </MenuItem>
        </Menu>
        <ToolBar Height="32" Grid.Row="1">
            <Button Command="ApplicationCommands.New">
                <Image Source="/TikzEdt;component/Images/NewDocument_32x32.png" />
            </Button>
            <Button Command="ApplicationCommands.Open">
                <Image Source="/TikzEdt;component/Images/openfolderHS.png" />
            </Button>
            <Button Command="ApplicationCommands.Save">
                <Image Source="/TikzEdt;component/Images/saveHS.png" />
            </Button>
            <Separator/>
            <Button Command="ApplicationCommands.Paste">
                <Image Source="/TikzEdt;component/Images/paste.png" />
            </Button>
            <Button Command="ApplicationCommands.Copy">
                <Image Source="/TikzEdt;component/Images/copy.png" />
            </Button>
            <Button Command="ApplicationCommands.Cut">
                <Image Source="/TikzEdt;component/Images/cut.png" />
            </Button>
            <Separator/>
            <Button Click="CompileClick">
                <Image Source="/TikzEdt;component/Images/Gear.png" />
            </Button>
            <Button Name="cmdAbortCompilation" IsEnabled="{Binding ElementName=tikzDisplay1, Path=Compiling}" Click="AbortCompilationClick">
                <Image Source="/TikzEdt;component/Images/error.png" Style="{StaticResource toolbarImageStyle}"/>
            </Button>
            <Separator/>   
            <CheckBox HorizontalAlignment="Center" IsChecked="True" Checked="CheckBox_Checked" Name="chkOverlay" Unchecked="chkOverlay_Unchecked">Overlay</CheckBox>
            <Separator/>
            <Label> Grid:  </Label>
            <ComboBox Name="cmbGrid"  Width="40" ItemsSource="{Binding}" SelectionChanged="cmbGrid_SelectionChanged" Text="1">
                <ComboBoxItem Content="0" />
                <ComboBoxItem Content="0.1" />
                <ComboBoxItem Content="0.2" />
                <ComboBoxItem Content="0.5" />
                <ComboBoxItem Content="1" />
            </ComboBox>
            <Separator/>
            <Button Click="cmdZoomOutClick">
                <Image Source="/TikzEdt;component/Images/2391_ZoomOut.png" />
            </Button>
            <ComboBox Name="cmbZoom"  Width="60" ItemsSource="{Binding}" SelectionChanged="cmbZoom_SelectionChanged" Text="100%" PreviewTextInput="cmbZoom_PreviewTextInput" IsEditable="True">
                <ComboBox.Style>
                    <Style>
                        <EventSetter Event="TextBox.TextChanged" Handler="cmbZoomTextChanged" />
                        
                    </Style>
                </ComboBox.Style>

                <ComboBoxItem Content="10%" />
                <ComboBoxItem Content="50%" />
                <ComboBoxItem Content="75%" />
                <ComboBoxItem Content="100%" />
                <ComboBoxItem Content="200%" />
            </ComboBox>
            <Button Click="cmdZoomInClick">
                <Image Source="/TikzEdt;component/Images/2392_ZoomIn_48x48.png" />
            </Button>
            <Separator/>
            <RadioButton HorizontalAlignment="Left" Name="rb1" VerticalAlignment="Top" IsChecked="True" Checked="rb1_Checked">
                <Image Source="/TikzEdt;component/Images/base_cursor.png" Style="{StaticResource toolbarImageStyle}"/>
            </RadioButton>
            <RadioButton HorizontalAlignment="Left" Name="rb2" VerticalAlignment="Top" Checked="rb1_Checked">
                <Image Source="/TikzEdt;component/Images/bmpvert.bmp" Style="{StaticResource toolbarImageStyle}"/>
            </RadioButton>
            <RadioButton HorizontalAlignment="Left" Name="rb3" VerticalAlignment="Top" Checked="rb1_Checked">
                <Image Source="/TikzEdt;component/Images/edge.bmp" Style="{StaticResource toolbarImageStyle}"/>
            </RadioButton>
            <RadioButton HorizontalAlignment="Left" Name="rb4" VerticalAlignment="Top" Checked="rb1_Checked">
                <Image Source="/TikzEdt;component/Images/path.bmp" Style="{StaticResource toolbarImageStyle}"/>
            </RadioButton>
        </ToolBar>
          
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" Name="LeftMenuCol"></ColumnDefinition>
                <ColumnDefinition Width="150" Name="LeftToolsCol"></ColumnDefinition>
                <ColumnDefinition Width="3" Name="LeftSplitterCol"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="3"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Background="Gray">
                <ToggleButton  Width="60" Name="cmdFiles" Checked="cmdSnippets_Checked" Unchecked="cmdSnippets_Unchecked" Focusable="False">
                    <ToggleButton.LayoutTransform>
                        <RotateTransform Angle="-90"/>
                    </ToggleButton.LayoutTransform>
                    Files
                </ToggleButton>
                <ToggleButton Width="60" Name="cmdSnippets" Checked="cmdSnippets_Checked" Unchecked="cmdSnippets_Unchecked" Focusable="False" IsChecked="True">
                    <ToggleButton.LayoutTransform>
                        <RotateTransform Angle="-90"/>
                    </ToggleButton.LayoutTransform>
                    Snippets
                </ToggleButton>
            </StackPanel>
            <GridSplitter Background="Gray" Grid.Column="2" Grid.Row="0" Height="Auto" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
            <my:SnippetList x:Name="snippetlist1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Column="1" Grid.Row="0" OnInsert="snippetlist1_OnInsert" />
            <Grid Grid.Column="3" Background="Black">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="3"/>
                    <RowDefinition Height="80"/>
                </Grid.RowDefinitions>
                <GridSplitter Background="Gray" Grid.Row="1" Height="Auto" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />              
                <RichTextBox Grid.Row="2" HorizontalAlignment="Stretch"  Name="txtStatus" VerticalAlignment="Stretch" IsReadOnly="True" VerticalScrollBarVisibility="Auto" />
                <avalonedit:TextEditor HorizontalAlignment="Stretch" Name="txtCode" VerticalAlignment="Stretch" DocumentChanged="txtCode_DocumentChanged" TextChanged="txtCode_TextChanged" ShowLineNumbers="True">
                    <avalonedit:TextEditor.ContextMenu>
                        <ContextMenu >
                            <MenuItem Header="Copy" Command="ApplicationCommands.Copy"/>
                            <MenuItem Header="Cut" Command="ApplicationCommands.Cut"/>
                            <MenuItem Header="Paste" Command="ApplicationCommands.Paste"/>
                            <Separator />
                            <MenuItem Header="Comment" Command="{x:Static custom:MainWindow.CommentCommand}"/>
                            <MenuItem Header="Uncomment" Command="{x:Static custom:MainWindow.UnCommentCommand}"/>
                        </ContextMenu>                            
                    </avalonedit:TextEditor.ContextMenu>
                </avalonedit:TextEditor>
            </Grid>
            <GridSplitter Background="Gray" Grid.Column="4" Grid.Row="0" Height="Auto" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Grid.Column="5">
                <!-- 
                <Button Grid.Row="0" Grid.Column="0">Hallo Welt</Button> <my:PdfOverlay  HorizontalAlignment="Stretch" x:Name="pdfOverlay1" VerticalAlignment="Stretch" Grid.Row="0" Grid.Column="0" />
                -->
                <Grid Background="Gray">
                    <my:RasterControl HorizontalAlignment="Center" x:Name="rasterControl1" Grid.Row="0" Width="200" Height="200" Grid.Column="0" VerticalAlignment="Center" />
                    <my:TikzDisplay HorizontalAlignment="Center" x:Name="tikzDisplay1" Width="200" Height="200" VerticalAlignment="Center" Grid.Row="0" Grid.Column="0" OnCompileEvent="tikzDisplay1_OnCompileEvent" />                  
                    <my:PdfOverlay  HorizontalAlignment="Center" x:Name="pdfOverlay1" VerticalAlignment="Center" Width="200" Height="200" Grid.Row="0" Grid.Column="0" OnModified="pdfOverlay1_OnModified" />                    
                </Grid>
            </ScrollViewer>

        </Grid>
        <StatusBar Grid.Row="3" Height="23" HorizontalAlignment="Stretch" Name="statusBar1" VerticalAlignment="Top" />
        <Button Content="Button" Grid.Row="1" Height="22" HorizontalAlignment="Right" Margin="0,5,77,0" Name="button1" VerticalAlignment="Top" Width="84" Click="button1_Click" />
        <Button Content="Button" Grid.Row="1" Height="21" HorizontalAlignment="Left" Margin="658,6,0,0" Name="button2" VerticalAlignment="Top" Width="59" Click="button2_Click" />
        
    </Grid>
</Window>
